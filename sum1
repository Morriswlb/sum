/*给定一个整数数组，找出其中两个数满足相加等于你指定的目标数字。

要求：这个函数twoSum必须要返回能够相加等于目标数字的两个数的索引，且index1必须要小于index2。请注意一点，你返回的结果（包括index1和index2）都不是基于0开始的。

你可以假设每一个输入肯定只有一个结果。

举例：

输入：numbers={2, 7, 11, 15}, target = 9

输出：index1 = 1, index2 = 2(不是基于0开始的)
这里面它会提供一个固定的接口让你去完成，比如这一题里面你需要在它提供的函数里面写出函数体即可。*/

/*基础思路：

开始的时候我没有其他的想法，只是想单纯的实现，从实现角度上来说，肯定是直接两层循环就可以完成，时间复杂度为o(n^2)，空间复杂度为o(1)，代码如下：*/

class Solution {
 public:
     vector<int> twoSum(vector<int> &numbers, int target) {
         vector<int> result;
         for (int i = 0; i < numbers.size()-1; i++) {
             for (int j = i+1; j < numbers.size(); j++) {
                 if (numbers[i] + numbers[j]==target) {
                     result.push_back(i);
                     result.push_back(j);
                     return result;
                 }
             }
         }
         return result;
     }
 };
